{"version":3,"sources":["component/LocationMarker.js","component/locationinfo.js","component/Map.js","component/spinner.gif","component/Loader.js","component/header.js","App.js","reportWebVitals.js","index.js"],"names":["LocationMarker","lat","lng","onClick","className","icon","locationIcon","LocationInfoBox","info","id","title","Map","eventData","center","zoom","useState","locationInfo","setLocatioInfo","markers","map","ev","categories","geometries","coordinates","bootstrapURLKeys","keys","defaultCenter","defaultZoom","defaultProps","Loader","src","spinner","alt","Header","App","setEventData","loading","setLoading","useEffect","a","fetch","res","json","events","fetchEvents","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAaeA,EAVS,SAAC,GAAuB,EAArBC,IAAqB,EAAjBC,IAAkB,IAAdC,EAAa,EAAbA,QAClC,OACQ,qBAAKC,UAAU,kBAAmBD,QAASA,EAA3C,SACE,cAAC,OAAD,CAAME,KAAMC,IAAeF,UAAU,qBCSjCG,EAfQ,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzB,OACS,sBAAKJ,UAAU,gBAAf,UACC,qDAEA,+BAEA,sCAAQ,iCAAUI,EAAKC,QACvB,yCAAW,iCAAUD,EAAKE,kBCH/BC,EAAM,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,UAAUC,EAAkB,EAAlBA,OAAOC,EAAW,EAAXA,KAAW,EACHC,mBAAS,MADN,mBACnCC,EADmC,KACrBC,EADqB,KAEpCC,EAAUN,EAAUO,KAAI,SAAAC,GACvB,OAA4B,IAAxBA,EAAGC,WAAW,GAAGZ,GACX,cAAC,EAAD,CAAgBR,IAAKmB,EAAGE,WAAW,GAAGC,YAAY,GAAIrB,IAC9DkB,EAAGE,WAAW,GAAGC,YAAY,GAAIpB,QAAS,kBAAMc,EAAe,CAC/DR,GAAIW,EAAGX,GAAIC,MAAOU,EAAGV,WAGhB,QAIN,OACP,sBAAKN,UAAU,MAAf,UACQ,cAAC,IAAD,CACEoB,iBAAkB,CAACC,KAClB,2CACCC,cAAiBb,EACjBc,YAAeb,EAJnB,SAMDI,IAEAF,GAAgB,cAAC,EAAD,CAAiBR,KAAMQ,QAKhDL,EAAIiB,aAAe,CAClBf,OAAQ,CACPZ,IAAK,QACLC,IAAM,SAEPY,KAAM,GAGQH,QCzCA,MAA0B,oCCY1BkB,EAVA,WACd,OACC,sBAAKzB,UAAU,SAAf,UACS,qBAAK0B,IAAKC,EAASC,IAAI,YACvB,mDCKIC,EARA,WACX,OACI,wBAAQ7B,UAAU,SAAlB,SACI,+BAAI,cAAC,OAAD,CAAMC,KAAMC,MAAhB,4C,MC4BG4B,MA5Bf,WAAgB,IAAD,EACsBnB,mBAAS,IAD/B,mBACLH,EADK,KACMuB,EADN,OAEiBpB,oBAAS,GAF1B,mBAENqB,EAFM,KAEGC,EAFH,KAmBb,OAfAC,qBAAW,YACO,uCAAG,gCAAAC,EAAA,6DACnBF,GAAW,GADQ,SAEDG,MAAM,mDAFL,cAEbC,EAFa,gBAGMA,EAAIC,OAHV,gBAGXC,EAHW,EAGXA,OAERR,EAAaQ,GACbN,GAAW,GANQ,4CAAH,qDASjBO,KAGE,IAGD,sBAAKxC,UAAU,MAAf,UACA,cAAC,EAAD,IACGgC,EAA0C,cAAC,EAAD,IAAhC,cAAC,EAAD,CAAKxB,UAAWA,QChBlBiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ea460d9f.chunk.js","sourcesContent":["import {Icon} from '@iconify/react'\r\nimport locationIcon from '@iconify/icons-mdi/fire-alert'\r\n\r\nconst LocationMarker =  ({ lat,lng,onClick}) => {\r\n\treturn (\r\n         <div className=\"location-marker\"  onClick={onClick}>\r\n           <Icon icon={locationIcon}  className=\"location-icon\" />\r\n           </div>\r\n\r\n \r\n\t\t)\r\n}\r\n\r\nexport default LocationMarker\r\n","const LocationInfoBox =({ info }) => {\r\n\treturn (\r\n          <div className=\"location-info\">\r\n           <h2>Event Location Info</h2>\r\n\r\n           <ul>\r\n           \r\n           <li>ID: <strong>{ info.id}</strong></li>\r\n           <li>Title: <strong>{ info.title }</strong></li>  \r\n\r\n           </ul>\r\n          </div>\r\n\t\t)\r\n}\r\n\r\nexport default LocationInfoBox","import { useState } from 'react'\r\nimport GoogleMapReact from 'google-map-react'\r\nimport LocationMarker from './LocationMarker'\r\nimport LocationInfoBox from './locationinfo'\r\n\r\nconst Map = ({ eventData,center,zoom }) => {\r\n\tconst [locationInfo, setLocatioInfo] = useState(null)\r\n\tconst markers = eventData.map(ev => {\r\n        if (ev.categories[0].id === 8){\r\n        \treturn   <LocationMarker lat={ev.geometries[0].coordinates[1]} lng=\r\n        \t{ev.geometries[0].coordinates[0]} onClick={() => setLocatioInfo({\r\n        \t\tid: ev.id, title: ev.title \r\n        \t})} />\r\n        }\r\n        return null\r\n    })\r\n\r\n\r\n        \treturn (\r\n\t\t<div className=\"map\">\r\n          <GoogleMapReact\r\n            bootstrapURLKeys={{keys : \r\n             'AIzaSyDJY9v2SN7XQOQIq4tik5t2UcSGmuqbMWA'}}\r\n              defaultCenter = {center}\r\n              defaultZoom = {zoom}\r\n          >\r\n        {markers}\r\n        </GoogleMapReact>\r\n        {locationInfo && <LocationInfoBox info={locationInfo} />}\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nMap.defaultProps = {\r\n\tcenter: {\r\n\t\tlat: 27.2046,\r\n\t\tlng:  77.4977\r\n\t},\r\n\tzoom: 8\r\n}\r\n\r\nexport default Map","export default __webpack_public_path__ + \"static/media/spinner.d3fbaf2b.gif\";","import spinner from './spinner.gif'\r\n\r\nconst Loader = () => {\r\n\treturn (\r\n\t\t<div className=\"loader\">\r\n           <img src={spinner} alt=\"Loading\" />\r\n           <h1>Fetching Data</h1>\r\n\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default Loader","import { Icon } from '@iconify/react'\r\nimport locationIcon from '@iconify/icons-mdi/fire-alert'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"header\">\r\n            <h1><Icon icon={locationIcon} /> Wildfire Tracker (Powered By NASA)</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import { useState, useEffect } from 'react'\nimport Map from './component/Map'\nimport Loader from './component/Loader'\nimport Header from './component/header'\nimport './App.css';\n\nfunction App() {\n  const  [eventData, setEventData] = useState([])\n  const [loading, setLoading] = useState(false)\n\n  useEffect( () => {\n   const fetchEvents = async () => {\n    setLoading(true)\n    const res = await fetch('https://eonet.sci.gsfc.nasa.gov/api/v2.1/events')\n    const { events } = await res.json()\n\n    setEventData(events)\n    setLoading(false)\n   }\n\n   fetchEvents()\n \n\n  }, [])\n\n  return (\n    <div className=\"App\">\n    <Header />\n    { !loading ? <Map eventData={eventData} /> : <Loader /> }\n        </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}